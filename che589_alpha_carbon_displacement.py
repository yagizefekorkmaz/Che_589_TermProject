# -*- coding: utf-8 -*-
"""Che589_Alpha_Carbon_Displacement.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1n2EWv4ezlxVdYL8FIBZPokLbqrtH5YrM
"""

import MDAnalysis as mda
import numpy as np
import math
import pandas as pd

u = mda.Universe("sarscov2.pdb","sarscov2-0000.dcd")

alpha = u.select_atoms('name CA')

#-----Distances of Each alpha-C to every alpha-C-----------

atom_number = 320
dist = np.zeros(0)
dist_to_write = np.zeros([atom_number,1])
frame = 1

for ts in u.trajectory[0:5] :
  for i in range(0,atom_number) :
    for j in range(0,atom_number) :
      dist = np.append(dist,math.dist(alpha.positions[i],alpha.positions[j]))
    dist = np.reshape(dist,(atom_number,1))
    dist_to_write = np.append(dist_to_write, dist, 1)
    dist = np.zeros(0)
  f = open('alpha_carbon_distances_frame'+str(frame)+'.txt', 'a')
  np.savetxt(f,dist_to_write, delimiter=" ")
  f.close()
  dist_to_write = np.zeros([atom_number,1])
  frame = frame+1

#-----Distances of Each Active Site alpha-C to every Active Site alpha-C-----------

active_carbons = [75,81,155,162,163,188,191,223,225,247,263,267,268,270,272]
atom_number = 320
dist = np.zeros(0)
dist_to_write = np.zeros([np.size(active_carbons),1])
frame = 1

for ts in u.trajectory[0:5] :
  for i in range(0,np.size(active_carbons)) :
    for j in range(0,np.size(active_carbons)) :
      dist = np.append(dist,math.dist(alpha.positions[active_carbons[i]],alpha.positions[active_carbons[j]]))
    dist = np.reshape(dist,(np.size(active_carbons),1))
    dist_to_write = np.append(dist_to_write, dist, 1)
    dist = np.zeros(0)
  f = open('alpha_carbon_distances_frame'+str(frame)+'.txt', 'a')
  np.savetxt(f,dist_to_write, delimiter=" ")
  f.close()
  dist_to_write = np.zeros([np.size(active_carbons),1])
  frame = frame+1

#-----Distances of One Active Site alpha-C to every alpha-C-----------

#active_carbons = [75,81,155,162,163,188,191,223,225,247,263,267,268,270,272]
active_carbon = 75
atom_number = 320
dist = np.zeros([1,atom_number])
dist_to_write = np.zeros([atom_number,1])
frame = 1

for ts in u.trajectory[0:5] :
  for i in range(0,atom_number) :
    dist = np.append(dist,math.dist(alpha.positions[75],alpha.positions[i]))
    dist = np.reshape(dist,(atom_number,1))
    dist_to_write = np.append(dist_to_write, dist, 1)
    dist = np.zeros(0)
  f = open('alpha_carbon_distances_frame'+str(frame)+'.txt', 'a')
  np.savetxt(f,dist_to_write, delimiter=" ")
  f.close()
  dist_to_write = np.zeros([atom_number,1])
  frame = frame+1

for ts in u.trajectory[0:5] :
  for i in range(0,atom_number):
    dist[0,i] = math.dist(alpha.positions[75],alpha.positions[i])
    dist = np.reshape(dist,(1,320))
  f = open('Active_AC1_dist_'+str(frame)+'.txt', 'a')
  np.savetxt(f,dist, delimiter=" ")
  f.close()
  frame = frame+1

#--------Read Data.txt Files------

dist1 = pd.read_csv('alpha_carbon_distances_frame1.txt', sep=" ", header=None)
dist2 = pd.read_csv('alpha_carbon_distances_frame2.txt', sep=" ", header=None)

#--------Calculating the Changes in Distances------

atom_number = 5
change_dist = np.zeros(0)
inc_dec = np.zeros([np.size(active_carbons),1])
list_of_change_dists = []

for j in range(1,np.size(active_carbons)+1) :
  atom_index2 = np.zeros([np.size(active_carbons),1])
  for i in range(0,np.size(active_carbons)) :
    delta = dist1.iloc[i,j] - dist2.iloc[i,j]
    change_dist = np.append(change_dist, delta)
    if delta>0.09:
      inc_dec[i,0] = 1
    if delta<0.09:
      inc_dec[i,0] = -1
    if delta<0.09 and delta>-0.09:
      inc_dec[i,0] = 0
    atom_index2[i,0] = i+1
  change_dist = np.reshape(change_dist,(np.size(active_carbons),1))
  atom_index1 = np.full((np.size(active_carbons), 1), j)
  change_dist = np.append(change_dist, atom_index1, 1)
  change_dist = np.append(change_dist, atom_index2, 1)
  change_dist = np.append(change_dist, inc_dec, 1)
  inc_dec = np.zeros([np.size(active_carbons),1])
  temp_change_dist = change_dist
  list_of_change_dists.append(temp_change_dist)
  change_dist = np.zeros(0)

final_con = np.concatenate((list_of_change_dists))

#--------Writing the deltaX's into a txt file------

f = open('dX_1_2.txt', 'w')
np.savetxt(f,final_con, fmt='%+1.9f %1d %1d %+1d', delimiter=" ")
f.close()

delta_x = pd.read_csv('dX_1_2.txt', sep=" ", header=None, names=['dX', 'AxC#1','AxC#2', 'Cut-Off = 0.09, +1=I -1=D'])

#--------Displacement Matrix------

disp_matrix = np.zeros([15,15])
j=0
k=0

for i in range(np.size(active_carbons)*np.size(active_carbons)) :
  disp_matrix[j,k] = delta_x.iloc[i,3]
  j = j+1
  if j>14 :
    j = 0
    k = k+1

f = open('Displacement_Matrix.txt' ,'w')
np.savetxt(f,disp_matrix, fmt='%1d', delimiter=" ")
f.close() 

displacement_matrix = pd.read_csv('Displacement_Matrix.txt', sep=" ", header=None)